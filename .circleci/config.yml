version: 2.1

workflows:
  test-pixel: # name of workflow
    jobs:   # jobs in workflow
      - pixel  # job name
        # filters: # filters for above job.
        #  branches: # only run the job for below branches below
        #   only:
        #     - master
      #     - /release.*/
jobs:
  pixel: # job name
    working_directory: ~/pixel
    docker:
      - image: circleci/android:api-30 # gcloud is baked into this image
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "pixel/build.gradle" }}
      - run:
          name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies for pixel library
          command: ./gradlew :pixel:androidDependencies
      - run:
          name: Build AARs
          command: ./gradlew :pixel:assemble #This will create for both debug and release.
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "pixel/build.gradle" }}
      - run:
          name: Run Pixel lib Unit Tests (Release Only)
          command: ./gradlew :pixel:testReleaseUnitTest
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: pixel/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: pixel/build/test-results
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples